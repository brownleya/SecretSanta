#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace thescruffster.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="biko")]
	public partial class thescruffsterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSecretSanta(SecretSanta instance);
    partial void UpdateSecretSanta(SecretSanta instance);
    partial void DeleteSecretSanta(SecretSanta instance);
    partial void InsertMishap(Mishap instance);
    partial void UpdateMishap(Mishap instance);
    partial void DeleteMishap(Mishap instance);
    partial void InsertBrownley(Brownley instance);
    partial void UpdateBrownley(Brownley instance);
    partial void DeleteBrownley(Brownley instance);
    #endregion
		
		public thescruffsterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public thescruffsterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public thescruffsterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public thescruffsterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SecretSanta> SecretSantas
		{
			get
			{
				return this.GetTable<SecretSanta>();
			}
		}
		
		public System.Data.Linq.Table<Mishap> Mishaps
		{
			get
			{
				return this.GetTable<Mishap>();
			}
		}
		
		public System.Data.Linq.Table<Brownley> Brownleys
		{
			get
			{
				return this.GetTable<Brownley>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecretSanta")]
	public partial class SecretSanta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SecretSantaID;
		
		private System.Nullable<System.Guid> _UserID;
		
		private string _Name;
		
		private string _Email;
		
		private System.Nullable<int> _BrownleyID;
		
		private string _Spouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecretSantaIDChanging(int value);
    partial void OnSecretSantaIDChanged();
    partial void OnUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBrownleyIDChanging(System.Nullable<int> value);
    partial void OnBrownleyIDChanged();
    partial void OnSpouseChanging(string value);
    partial void OnSpouseChanged();
    #endregion
		
		public SecretSanta()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretSantaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SecretSantaID
		{
			get
			{
				return this._SecretSantaID;
			}
			set
			{
				if ((this._SecretSantaID != value))
				{
					this.OnSecretSantaIDChanging(value);
					this.SendPropertyChanging();
					this._SecretSantaID = value;
					this.SendPropertyChanged("SecretSantaID");
					this.OnSecretSantaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrownleyID", DbType="Int")]
		public System.Nullable<int> BrownleyID
		{
			get
			{
				return this._BrownleyID;
			}
			set
			{
				if ((this._BrownleyID != value))
				{
					this.OnBrownleyIDChanging(value);
					this.SendPropertyChanging();
					this._BrownleyID = value;
					this.SendPropertyChanged("BrownleyID");
					this.OnBrownleyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spouse", DbType="VarChar(500)")]
		public string Spouse
		{
			get
			{
				return this._Spouse;
			}
			set
			{
				if ((this._Spouse != value))
				{
					this.OnSpouseChanging(value);
					this.SendPropertyChanging();
					this._Spouse = value;
					this.SendPropertyChanged("Spouse");
					this.OnSpouseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mishap")]
	public partial class Mishap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorID;
		
		private string _Error;
		
		private string _UserName;
		
		private System.DateTime _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIDChanging(int value);
    partial void OnErrorIDChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public Mishap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorID
		{
			get
			{
				return this._ErrorID;
			}
			set
			{
				if ((this._ErrorID != value))
				{
					this.OnErrorIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorID = value;
					this.SendPropertyChanged("ErrorID");
					this.OnErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(1000)")]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(1000)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brownley")]
	public partial class Brownley : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrownleyID;
		
		private string _Name;
		
		private string _WishList;
		
		private bool _IsChosen;
		
		private string @__2009_Wish_List;
		
		private string @__2010_Wish_List;
		
		private string @__2011_Wish_List;
		
		private string @__2012_Wish_List;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrownleyIDChanging(int value);
    partial void OnBrownleyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWishListChanging(string value);
    partial void OnWishListChanged();
    partial void OnIsChosenChanging(bool value);
    partial void OnIsChosenChanged();
    partial void On_2009_Wish_ListChanging(string value);
    partial void On_2009_Wish_ListChanged();
    partial void On_2010_Wish_ListChanging(string value);
    partial void On_2010_Wish_ListChanged();
    partial void On_2011_Wish_ListChanging(string value);
    partial void On_2011_Wish_ListChanged();
    partial void On_2012_Wish_ListChanging(string value);
    partial void On_2012_Wish_ListChanged();
    #endregion
		
		public Brownley()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrownleyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrownleyID
		{
			get
			{
				return this._BrownleyID;
			}
			set
			{
				if ((this._BrownleyID != value))
				{
					this.OnBrownleyIDChanging(value);
					this.SendPropertyChanging();
					this._BrownleyID = value;
					this.SendPropertyChanged("BrownleyID");
					this.OnBrownleyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WishList", DbType="VarChar(500)")]
		public string WishList
		{
			get
			{
				return this._WishList;
			}
			set
			{
				if ((this._WishList != value))
				{
					this.OnWishListChanging(value);
					this.SendPropertyChanging();
					this._WishList = value;
					this.SendPropertyChanged("WishList");
					this.OnWishListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChosen", DbType="Bit NOT NULL")]
		public bool IsChosen
		{
			get
			{
				return this._IsChosen;
			}
			set
			{
				if ((this._IsChosen != value))
				{
					this.OnIsChosenChanging(value);
					this.SendPropertyChanging();
					this._IsChosen = value;
					this.SendPropertyChanged("IsChosen");
					this.OnIsChosenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2009_Wish_List]", Storage="__2009_Wish_List", DbType="VarChar(1000)")]
		public string _2009_Wish_List
		{
			get
			{
				return this.@__2009_Wish_List;
			}
			set
			{
				if ((this.@__2009_Wish_List != value))
				{
					this.On_2009_Wish_ListChanging(value);
					this.SendPropertyChanging();
					this.@__2009_Wish_List = value;
					this.SendPropertyChanged("_2009_Wish_List");
					this.On_2009_Wish_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2010_Wish_List]", Storage="__2010_Wish_List", DbType="VarChar(1000)")]
		public string _2010_Wish_List
		{
			get
			{
				return this.@__2010_Wish_List;
			}
			set
			{
				if ((this.@__2010_Wish_List != value))
				{
					this.On_2010_Wish_ListChanging(value);
					this.SendPropertyChanging();
					this.@__2010_Wish_List = value;
					this.SendPropertyChanged("_2010_Wish_List");
					this.On_2010_Wish_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2011_Wish_List]", Storage="__2011_Wish_List", DbType="VarChar(1000)")]
		public string _2011_Wish_List
		{
			get
			{
				return this.@__2011_Wish_List;
			}
			set
			{
				if ((this.@__2011_Wish_List != value))
				{
					this.On_2011_Wish_ListChanging(value);
					this.SendPropertyChanging();
					this.@__2011_Wish_List = value;
					this.SendPropertyChanged("_2011_Wish_List");
					this.On_2011_Wish_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[2012_Wish_List]", Storage="__2012_Wish_List", DbType="VarChar(1000)")]
		public string _2012_Wish_List
		{
			get
			{
				return this.@__2012_Wish_List;
			}
			set
			{
				if ((this.@__2012_Wish_List != value))
				{
					this.On_2012_Wish_ListChanging(value);
					this.SendPropertyChanging();
					this.@__2012_Wish_List = value;
					this.SendPropertyChanged("_2012_Wish_List");
					this.On_2012_Wish_ListChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
